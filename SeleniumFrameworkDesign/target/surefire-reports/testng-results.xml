<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="10" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-22T10:09:38 IST" name="Suite" finished-at="2023-10-22T10:11:04 IST" duration-ms="86362">
    <groups>
      <group name="purchase">
        <method signature="StandaloneTest_for_PageObject.submitOrder(java.util.HashMap)[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" name="submitOrder" class="RavitejaAcademy.StandaloneTest_for_PageObject"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2023-10-22T10:09:38 IST" name="Error validation message" finished-at="2023-10-22T10:11:01 IST" duration-ms="83617">
      <class name="RavitejaAcademy.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:09:38 IST" name="launchApplication" finished-at="2023-10-22T10:10:30 IST" duration-ms="52658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:30 IST" name="loginErrorValidation" finished-at="2023-10-22T10:10:32 IST" duration-ms="1182" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at RavitejaAcademy.ErrorValidations.loginErrorValidation(ErrorValidations.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:32 IST" name="tearDown" finished-at="2023-10-22T10:10:32 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:32 IST" name="launchApplication" finished-at="2023-10-22T10:10:36 IST" duration-ms="4131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:36 IST" name="loginErrorValidation" finished-at="2023-10-22T10:10:37 IST" duration-ms="1124" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at RavitejaAcademy.ErrorValidations.loginErrorValidation(ErrorValidations.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:37 IST" name="tearDown" finished-at="2023-10-22T10:10:37 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:37 IST" name="launchApplication" finished-at="2023-10-22T10:10:39 IST" duration-ms="1682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:39 IST" name="loginErrorValidation" finished-at="2023-10-22T10:10:42 IST" duration-ms="3652" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at RavitejaAcademy.ErrorValidations.loginErrorValidation(ErrorValidations.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:43 IST" name="tearDown" finished-at="2023-10-22T10:10:43 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:43 IST" name="launchApplication" finished-at="2023-10-22T10:10:47 IST" duration-ms="4149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:10:47 IST" name="submitOrder" finished-at="2023-10-22T10:11:01 IST" duration-ms="14018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.ErrorValidations@6be968ce]" started-at="2023-10-22T10:11:01 IST" name="tearDown" finished-at="2023-10-22T10:11:01 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RavitejaAcademy.ErrorValidations -->
    </test> <!-- Error validation message -->
    <test started-at="2023-10-22T10:09:38 IST" name="submit order Test" finished-at="2023-10-22T10:11:04 IST" duration-ms="86362">
      <class name="RavitejaAcademy.StandaloneTest_for_PageObject">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:09:38 IST" name="launchApplication" finished-at="2023-10-22T10:10:30 IST" duration-ms="52351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:30 IST" name="submitOrder" data-provider="getData" finished-at="2023-10-22T10:10:34 IST" duration-ms="4035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Vraviteja@12345, productName=ZARA COAT 3, useremail=raviteja@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:34 IST" name="tearDown" finished-at="2023-10-22T10:10:35 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:35 IST" name="launchApplication" finished-at="2023-10-22T10:10:39 IST" duration-ms="4041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:39 IST" name="submitOrder" data-provider="getData" finished-at="2023-10-22T10:10:54 IST" duration-ms="15494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Vravi@12345, productName=ADIDAS ORIGINAL, useremail=reddiprasad@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:54 IST" name="tearDown" finished-at="2023-10-22T10:10:54 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:54 IST" name="launchApplication" finished-at="2023-10-22T10:10:58 IST" duration-ms="3913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ordersHistory(java.util.HashMap)[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:58 IST" name="ordersHistory" data-provider="getData" finished-at="2023-10-22T10:10:59 IST" depends-on-methods="RavitejaAcademy.StandaloneTest_for_PageObject.submitOrder" duration-ms="849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Vraviteja@12345, productName=ZARA COAT 3, useremail=raviteja@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ordersHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:59 IST" name="tearDown" finished-at="2023-10-22T10:10:59 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:10:59 IST" name="launchApplication" finished-at="2023-10-22T10:11:03 IST" duration-ms="3871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ordersHistory(java.util.HashMap)[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:11:03 IST" name="ordersHistory" data-provider="getData" finished-at="2023-10-22T10:11:04 IST" depends-on-methods="RavitejaAcademy.StandaloneTest_for_PageObject.submitOrder" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Vravi@12345, productName=ADIDAS ORIGINAL, useremail=reddiprasad@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ordersHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RavitejaAcademy.StandaloneTest_for_PageObject@97e93f1]" started-at="2023-10-22T10:11:04 IST" name="tearDown" finished-at="2023-10-22T10:11:04 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RavitejaAcademy.StandaloneTest_for_PageObject -->
    </test> <!-- submit order Test -->
  </suite> <!-- Suite -->
</testng-results>
